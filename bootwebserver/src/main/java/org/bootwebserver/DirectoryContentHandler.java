/**
 * 
 */
package org.bootwebserver;

import java.io.IOException;
import java.nio.file.DirectoryStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.attribute.FileTime;
import java.util.Date;
import java.util.Iterator;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.util.StringUtils;

/**
 * @author Flavio Ricci
 *
 */
public class DirectoryContentHandler {

	
	@Autowired WebRootHandler webRoot;
	
	public String buildDirectoryContent(String remainder) throws IOException {
		StringBuilder builder=new StringBuilder();
		
		Path directory=webRoot.resolve(remainder).normalize();
		remainder=StringUtils.hasText(remainder)?remainder:"/";
		builder.append("<html>");
		builder.append("<head><title>").append(remainder).append("</title></head>");
		builder.append("<body>");
		builder.append("<h2>").append("Directory of ").append(remainder).append("</h2>");
		builder.append("<hr></hr>");
		builder.append("<table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">");
		
		if (webRoot.isRoot(directory)) {
			addResource(builder, "../", "..", "&lt;dir&gt;", "", Files.getLastModifiedTime(directory.getParent()));			
		}
		else {
			addResource(builder, webRoot.breadcrumb(directory.getParent()), "..", "&lt;dir&gt;", "", Files.getLastModifiedTime(directory.getParent()));
		}
		
		try (DirectoryStream<Path> files=Files.newDirectoryStream(directory)){
			
			Iterator<Path> iterator=files.iterator();
			
			if (iterator.hasNext()) {
				do {
					addResource(builder, iterator.next());
				} while (iterator.hasNext());
			}
			
		} catch (IOException x) { }
		
		builder.append("</table>");
		builder.append("<hr></hr>");
		builder.append("<i>Directory content generated by boot-webserver</i>");
		builder.append("</body>");
		builder.append("</html>");
		
		return builder.toString();
	}
	
	protected void addResource(StringBuilder builder, Path file) throws IOException {
		final String fileName=file.getFileName().toString();
		final String mimeType=Files.isDirectory(file)?"&nbsp;":ActivationMediaTypeFactory.getMediaType(fileName).toString();
		final FileTime fileTime=Files.getLastModifiedTime(file);
		final String fileSize=Files.isDirectory(file)?"&lt;dir&gt;":String.valueOf(Files.size(file));
		addResource(builder, webRoot.breadcrumb(file), fileName, fileSize, mimeType, fileTime);
	}
	
	protected void addResource(StringBuilder builder, String href, String name, String space, String mimeType, FileTime fileTime) throws IOException {
		builder
		.append("<tr>")
			.append("<td width=\"35%\">")
				.append("<a href=\"").append(href).append("\">").append(name).append("</a>")
			.append("</td>")
			.append("<td width=\"15%\">")
				.append(space)
			.append("</td>")
			.append("<td width=\"15%\">")
				.append(mimeType)
			.append("</td>")				
			.append("<td>")
				.append(Date.from(fileTime.toInstant()))
			.append("</td>")
		.append("</tr>");
	}
}
